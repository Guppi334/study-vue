v-once 描画を変更させたくない場合に使用
v-htmlはクロスサイトスクリプティングの可能性があるため、信頼のあるコンテンツを表示する場合にのみ使用すること
vbindで動的に表現することができる


methodsよりもcomputedを使用するように
非同期処理を行う際はwatchを使用するが、基本はcomputedを使用する
watch内ではthis.を使用できないため、別の変数にthisを代入、その変数を参照して使用するようにする

{{}}でのcomputedは()をつけないがmethodsでは必ずつける
v-onディレクトティブで呼び出すmethodsでは()は付けなくてもよい

v-showではtemplateは使えない
v-showはcss のdisplay:noneにしているだけなので存在はしている
また、v-elseにあたるものがない
また、v-showは全部表示しているため初期表示が遅くなる
v-ifでは切り替え時の処理が遅くなる

頻繁に表示非表示を切り替える場合はv-showを、初期表示以降表示の切り替えがない場合はv-ifを使用する

v-forを使用する際はkeyをセットで使用をすること、templateタブはkey属性が使用できないため注意
keyの値はindexだと変動的になってしまうため使用しないこと 配列の内容が好ましい? 一意である必要がある

$mountはelプロパティを後付けで指定するために使用する

render関数では仮想ノードを作成、返している

assetsフォルダではcssや画像ファイルを配置する

コンポーネント名はパスカルケースで指定した場合、HTMLタグはケバブケースでも記載できる
逆は不可

DOMテンプレートで記載する際はケバブケースで記載しないといけない
vueCLIを使用する際はパスカルケース、webブラウザ上でのみ使用する場合はケバブケースで記載しないといけない

親コンポーネントから子コンポーネントに値を渡すにはpropsを利用する
propsではキャメルケースとケバブケースで記載をできる
これもDOMテンプレートの場合はケバブケースで記載、それ以外の場合はキャメルケースで記載する
おすすめは基本はscriptタグ内はキャメルケース、templateタグ内でpropsで使用する場合はケバブケースで記載すとよい

$emitは子コンポーネントが好きなタイミングで親コンポーネントのイベントを発火できる

propsは配列、オブジェクトは参照渡しとなるため注意する

$emitで作成するカスタムメソッド名はケバブケースで命名する
→DOMテンプレートを使用する可能性があるため

子コンポーネントにslotを配置することで、親コンポーネントでテンプレートを子コンポーネントに送ることができる
allback…slotで内容がなかった場合に表示するデフォルトのコンテンツ、slotタグ内に記載をする
slotを特定の内容のみ表示したい場合、表示したい内容をtemplateタグで囲い、v-slot:名前を設定、表示先のslotタグにname属性=名前を設定すればよい

